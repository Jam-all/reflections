When would you want to use a remote repository rather than keeping all your work local?

    When I am planning to continue my work from different device or when I want to cooperate on the project with other people.
  
Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because sometimes I do not want the same version of the files which is on GitHub and instead I want to work in a different direction
    with them (let's say experiment) or I do not want some files which were added to GitHub, but not to my local repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork: GitHub version of a "git clone" command - will copy the whole GitHub repository to my GitHub.
    Clone: Creates a copy of either GitHub repository to my computer (GitHub to local) or copy of my local repository to my computer
    (local to local).
    Branch: A new "path" in version control of e.g. my program (for example, for experimental features etc.).

What is the benefit of having a copy of the last known state of the remote stored locally?

    One can follow the updates of other people collaborating on the project and start from there.

How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?

    Almost everything would be harder, I would have to send all the updated files to my collaborators everytime and wait until
    they send it back with the comments.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

    When I am 100 % sure the changes I want to make are ok, I can do it in directly in master. When I want to experiment and want to stay
    save, I can create a new branch and work on it independently from the master branch (i.e. not influencing master branch directly).
