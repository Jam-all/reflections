What happens when you initialize a repository? 

	I create a hidden .git folder and prepare the folder I am currently working on for tracking changes.

Why do you need to do it?

	Because I want to track the changes of my files.




How is the staging area different from the working directory and the repository?


	It is a transitional part between working directory and a repository, enables the user to modify (add, delete) the files I want
	to commit to a repository. 

What value do you think it offers?



	Enables to check all the updates I want to commit before actual commiting.

How can you use the staging area to make sure you have one commit per logical 
change?

	I can compare the staging area with the working directory and also with the repository, so I can see the changes I want to commit.



What are some situations when branches would be helpful in keeping your history 
organized? How would branches help?


	When I want to keep the master branch (i.e. the path which is usable and working OK), but want to experiment or vary it in
	different ways, I can use more branches.


How do the diagrams help you visualize the branch structure?

	They offer more visual way for branch structure I am currently using, so I can orient myself more quickly also in a quite complex
	branch structure.



What is the result of merging two branches together? Why do we represent it in 
the diagram the way we do?



	The result is one merged branch which contains commits from both branches. We represent it as two separate branches connecting in
	one commit, because that is what in fact happens.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
